@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@using System.Globalization;
@using CashCare.ViewModels;
@model DailyExpenseViewModel

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link href="~/css/site.css" rel="stylesheet" />

@{
    var dailyLimit = (Model.currentWallet.NettIncomeAfter / 30);
    var dailyLeft = dailyLimit - Model.todaytotalExpense;
    var culture = ViewData["SelectedCulture"]?.ToString() ?? "en-US";
}

<form method="post" asp-controller="Home" asp-action="CreateDailyExpense" enctype="multipart/form-data">

    <div style="display:flex">

        <div style="flex:1">

            <div class="card" style="border-top-left-radius:20px;border-radius:20px;height:320px">
                <div class="card-header" style="background-color:#0070ba;border-top-left-radius:20px;border-top-right-radius:20px;height:60px">


                    <label style="color:white;width:100%;height:100%;padding:20px;font-size:18px" class="textFormat">
                        @Localizer["Add new expense for today"]
                        <span style="float:right;">@dailyLeft.ToString("F2") @Localizer["$"] / @dailyLimit.ToString("F2") @Localizer["$"]</span>
                    </label>


                </div>
                <div class="card-body">
                    <div>

                        <div>
                            <div class="form-floating">
                                <input style="border: 2px solid #0070ba;" asp-for="currentExpense.Description" class="form-control" id="floatingInputGridDescription" placeholder="">
                                <label for="floatingInputGridDescription">@Localizer["Description"]</label>
                            </div>
                        </div>
                        <br />
                        <div>
                            <div class="form-floating" style="padding-bottom:20px">
                                <input style=" border: 2px solid #0070ba;" asp-for="currentExpense.Amount" class="form-control" id="floatingInputGridAmount" placeholder="200$" oninput="validateDecimalInput(this)" value="">
                                <label for="floatingInputGridAmount">@Localizer["Amount"]</label>
                            </div>
                        </div>

                        <div style="text-align:left">
                            <button name="BtnAction" style="width:100%; height:calc(3.5rem + 2px); border-radius:10px;background-color:#0070ba;color:white;height:45px" class="btn btn textFormat">@Localizer["Add"]</button>
                        </div>

                    </div>
                </div>
            </div>

            <br />
            
            
            <div class="card" style="border-top-left-radius:20px;border-radius:20px;height:320px;text-align:center">

                <canvas id="myChart"  height="320"></canvas>
               
            </div>
           
        </div>

        <div style="flex:0.08">
        </div>

        <div style="flex:2">

            @{

                <div class="card">
                    <div class="card-header">
                        <span class="textFormat">@Localizer["Current month"]  @(Model.currentWallet.NettIncomeAfter - Model.ExpenseSomme) @Localizer["$"] / @Model.currentWallet.NettIncomeAfter @Localizer["$"] </span>
                    </div>

                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th style="text-align:center" scope="col">@Localizer["Expenses"]</th>
                                <th style="text-align:center;" scope="col">@Localizer["Saving"]</th>
                                <th style="text-align:center;" scope="col">@Localizer["Actions"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var expense in Model.ListexpensePerDay)
                                {


                                    <tr>
                                        <th scope="row">
                                            @{
                                                if (expense.DayOftheMonth.Day == DateTime.Now.Day)
                                                {
                                                    <span style="font-size:15px">@Localizer["Today"]</span>
                                                }
                                                else
                                                {
                                                    <span style="font-size:15px">@expense.DayOftheMonth.ToString("dddd", new CultureInfo(culture)) @expense.DayOftheMonth.ToString("dd.MM")</span>
                                                }
                                            }
                                        </th>
                                        <td style="text-align:center">@expense.ExpensesTotalAmount.ToString("F2")</td>
                                        <td style="text-align:center">@expense.SavingThisDay.ToString("F2")</td>
                                        <td style="text-align:center;"><a style="font-weight: bolder;" href="@Url.Action("DayDetails", new { dateOfTheMonth = expense.DayOftheMonth})">Details </a></td>
                                    </tr>
                                }
                                <tr>
                                    <th scope="row">@Localizer["Result"]</th>
                                    <td style="text-align:center"><b> @Model.ExpenseUntil(@Model.ListexpensePerDay.Count()).ToString("F2") @Localizer["$"]</b></td>
                                    <td style="text-align:center"><b> @Model.SavingUntil(@Model.ListexpensePerDay.Count()).ToString("F2")  @Localizer["$"]</b></td>
                                    <td style="text-align:center;">#</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>

            }

        </div>
    </div>

</form>
<script src="~/js/wallet.js"></script>

@{
    var labelsJson = Json.Serialize(Model.ListexpensePerDay.OrderBy(x => x.DayOftheMonth).Select(x => x.DayOftheMonth.ToString("dd")).ToList());
    var dataJson = Json.Serialize(Model.savingUntilDate);
}
<script>
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(labelsJson) ,
            datasets: [{
                label: 'Saving line time.',
                data: @Html.Raw(dataJson),
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2,
                fill: false
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
