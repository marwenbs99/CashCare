@* @{
    var currentUrl = Context.Request.Path + Context.Request.QueryString;
} *@
@using CashCare.ViewModels.Enum;
@using CashCare.Models.Wallet.Enum;
@using CashCare.ViewModels;
@model WalletViewModel

@* CETTE PARTIE Appartient au revenue !! ----------------------------------------------------------------------------------------------------------------------- *@
<form method="post" asp-controller="Wallet" asp-action="Index" enctype="multipart/form-data">
    <div class="accordion" id="accordionId">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headerId1">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseId1" aria-expanded="true" aria-controls="collapseId1">
                    Income - @Model.TotalIncome $  <span style="width:80%;text-align:right">Nett Income After Debts, Expense and Saving: @Model.NettIncomeAfter $</span>
                </button>
            </h2>
            <div id="collapseId1" class="accordion-collapse collapse @Model.MenuState.IncomeMenu" aria-labelledby="headerId1" data-bs-parent="#accordionId">
                <div class="accordion-body">
                    <div class="row g-4">

                        <div class="col-md">
                            <div class="form-floating">
                                <select asp-for="Income.TypeOfIncome" class="form-select" id="floatingSelectGrid">
                                    <option selected>Open this select menu</option>
                                    <option value="@IncomeType.MonthlySalary">@IncomeType.MonthlySalary.ToString()</option>
                                    <option value="@IncomeType.RentalIncome">@IncomeType.RentalIncome.ToString()</option>
                                    <option value="@IncomeType.SocialBenefits">@IncomeType.SocialBenefits.ToString()</option>
                                    <option value="@IncomeType.Others">@IncomeType.Others.ToString()</option>
                                </select>
                                <label for="floatingSelectGrid">Type of income</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <div class="form-floating">
                                <input asp-for="Income.Amount" class="form-control" id="floatingInputGrid" placeholder="2500$" oninput="validateDecimalInput(this)" value="">
                                <label for="floatingInputGrid">Amount</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <div class="form-floating">
                                <input asp-for="Income.DataOfRecive" class="form-control" id="floatingInputGrid" placeholder="27" step="1" min="1" max="30" value="">
                                <label for="floatingInputGrid">Date of recive 1-30</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <button asp-for="BtnAction" value="@ButtonActionType.IncomeBTN" name="BtnAction" style="width:100%; height:calc(3.5rem + 2px);" class="btn btn-success">Save</button>
                        </div>
                    </div>

                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Type of income</th>
                                <th scope="col">Amount</th>
                                <th scope="col">Date of recive</th>
                                <th style="text-align:right;padding-right:10%" scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var income in Model.Wallet.Incomes)
                                {
                                    <tr>
                                        <th scope="row"> @income.TypeOfIncome.ToString() </th>
                                        <td>@income.Amount $</td>
                                        <td>the @income.DataOfRecive th of each month</td>
                                        <td style="text-align:right;padding-right:10%">
                                            <a href="@Url.Action("EditIncome",new {id = income.Id})">Edit</a>
                                            <a value="@ButtonActionType.DeleteIncome" asp-for="BtnAction" href="@Url.Action("DeleteIncome",new {id = income.Id})">Delete</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @* CETTE PARTIE Appartient au dette !! ----------------------------------------------------------------------------------------------------------------------- *@

    <div class="accordion" id="accordionId">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headerId2">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseId2" aria-expanded="true" aria-controls="collapseId2">
                    Debt - repaid per month - @Model.TotalDebts $
                </button>
            </h2>
            <div id="collapseId2" class="accordion-collapse collapse @Model.MenuState.DebtMenu" aria-labelledby="headerId2" data-bs-parent="#accordionId">
                <div class="accordion-body">
                    <div class="row g-3">

                        <div class="col-md">
                            <div class="form-floating">
                                <select asp-for="Debt.DebtType" class="form-select" id="floatingSelectGrid">
                                    <option selected>Open this select menu</option>
                                    <option value="@DebtType.PersonalDebt">Personal Debt</option>
                                    <option value="@DebtType.StudentDebt">Student Debt</option>
                                    <option value="@DebtType.ConsumerDebt">Consumer Debt</option>
                                    <option value="@DebtType.MedicalDebt">Medical Debt</option>
                                    <option value="@DebtType.Others">Others</option>
                                </select>
                                <label for="floatingSelectGrid">Type of Debt</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <div class="form-floating">
                                <input asp-for="Debt.Amount" class="form-control" id="floatingInputGrid" placeholder="50$" oninput="validateDecimalInput(this)" value="">
                                <label for="floatingInputGrid">Amount paid monthly</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <button value="@ButtonActionType.DebtBTN" asp-for="BtnAction" name="BtnAction" style="width:100%; height:calc(3.5rem + 2px);" class="btn btn-success">Save</button>
                        </div>
                    </div>

                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Type of Debt</th>
                                <th scope="col">Amount</th>
                                <th style="text-align:right; padding-right:10%" scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>

                            @{
                                foreach (var debt in Model.Wallet.Debts)
                                {
                                    <tr>
                                        <th scope="row"> @debt.DebtType.ToString()</th>
                                        <td>@debt.Amount $</td>
                                        <td style="text-align:right;padding-right:10%">
                                            <a href="@Url.Action("EditDebt",new {id = debt.Id})">Edit</a>
                                            <a href="@Url.Action("DeleteDebt",new {id = debt.Id})">Delete</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>


    @* CETTE PARTIE Appartient au expense !! ----------------------------------------------------------------------------------------------------------------------- *@


    <div class="accordion" id="accordionId">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headerId3">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseId3" aria-expanded="true" aria-controls="collapseId3">
                    Fixed expense - @Model.TotalExpense $
                </button>
            </h2>
            <div id="collapseId3" class="accordion-collapse collapse @Model.MenuState.ExpenseMenu" aria-labelledby="headerId3" data-bs-parent="#accordionId">
                <div class="accordion-body">
                    <div class="row g-4">

                        <div class="col-md">
                            <div class="form-floating">
                                <select asp-for="Expense.TypeOfExpense" class="form-select" id="floatingSelectGrid">
                                    <option selected>Open this select menu</option>
                                    <option value="@ExpenseType.HousingRent">Housing Rent</option>
                                    <option value="@ExpenseType.Abonnements">Abonnements</option>
                                    <option value="@ExpenseType.Tuition">Tuition</option>
                                    <option value="@ExpenseType.Transportation">Transportation</option>
                                    <option value="@ExpenseType.Others">Others</option>
                                </select>
                                <label for="floatingSelectGrid">Type of expense</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <div class="form-floating">
                                <input asp-for="Expense.details" class="form-control" id="floatingInputGrid" placeholder="">
                                <label for="floatingInputGrid">Details: ex. Vodafone Abonnement</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <div class="form-floating">
                                <input asp-for="Expense.Amount" class="form-control" id="floatingInputGrid" placeholder="400$" oninput="validateDecimalInput(this)">
                                <label for="floatingInputGrid">Amount</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <button name="BtnAction" value="@ButtonActionType.ExpenseBTN" style="width:100%; height:calc(3.5rem + 2px);" class="btn btn-success">Save</button>
                        </div>
                    </div>

                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Type of expense</th>
                                <th scope="col">Details</th>
                                <th scope="col">Amount</th>
                                <th style="text-align:right;padding-right:10%" scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var expense in Model.Wallet.ExpenseListe)
                                {
                                    <tr>
                                        <th scope="row"> @expense.TypeOfExpense.ToString()</th>
                                        <td>@expense.details</td>
                                        <td>@expense.Amount $</td>
                                        <td style="text-align:right;padding-right:10%">
                                            <a href="@Url.Action("EditExpense",new {id = expense.Id})">Edit</a>
                                            <a href="@Url.Action("DeleteExpense",new {id = expense.Id})">Delete</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    @* CETTE PARTIE Appartient au epargne !! ----------------------------------------------------------------------------------------------------------------------- *@

    <div class="accordion" id="accordionId">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headerId4">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseId4" aria-expanded="true" aria-controls="collapseId4">
                    Saving program - @Model.Wallet.Saving.MonthlySavingAmount $ per Month
                </button>
            </h2>
            <div id="collapseId4" class="accordion-collapse collapse @Model.MenuState.SavingMenu" aria-labelledby="headerId4" data-bs-parent="#accordionId">
                <div class="accordion-body">
                    <div class="row g-4">

                        <div class="col-md">
                            <div class="form-floating">
                                <select class="form-select" id="floatingSelectGrid">
                                    <option selected>Manuel amount</option>
                                    <option>% of the salary</option>
                                </select>
                                <label for="floatingSelectGrid">Saving Options</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <div class="form-floating">
                                <input asp-for="Wallet.Saving.MonthlySavingAmount" class="form-control" id="floatingInputGrid" placeholder="400$" value="Model.Wallet.Saving.MonthlySavingAmount" oninput="validateDecimalInput(this)">
                                <label for="floatingInputGrid">@Model.Wallet.Saving.MonthlySavingAmount</label>
                            </div>
                        </div>

                        <div class="col-md">
                            <button name="BtnAction" value="@ButtonActionType.SavingBTN" style="width:100%; height:calc(3.5rem + 2px);" class="btn btn-success">Save</button>
                        </div>
                    </div>

                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Monthly saving</th>
                                <th scope="col">Expected in 1 year</th>
                                <th style="text-align:right;padding-right:10%" scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                <tr>
                                    <th scope="row">Expecting</th>
                                    <td>@Model.Wallet.Saving.MonthlySavingAmount.ToString("F2") $</td>
                                    <td>
                                        @{
                                           var x = (Model.Wallet.Saving.MonthlySavingAmount * 12).ToString("F2");
                                        }
                                        @x $
                                    </td>
                                    <td style="text-align:right;padding-right:10%">
                                        <a href="#">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>



    <div style="height:300px;text-align:center;">
        <canvas style="display:inline-block" height="300" width="300" id="Total"></canvas>
        <canvas style="display:inline-block" height="300" width="300" id="Debt"></canvas>
        <canvas style="display:inline-block" height="300" width="300" id="Expense"></canvas>

    </div>
    <div>
    </div>

</form>

@{
    var IncomeLabelList = new List<string>();
    var IncomePriceList = new List<decimal>();

    var DebtLabelList = new List<string>();
    var DebtPriceList = new List<decimal>();

    var ExpenseLabelList = new List<string>();
    var ExpensePriceList = new List<decimal>();

    foreach (var income in Model.Wallet.Incomes)
    {
        IncomeLabelList.Add(income.TypeOfIncome.ToString());
        IncomePriceList.Add(income.Amount);
    }

    foreach (var debt in Model.Wallet.Debts)
    {
        DebtLabelList.Add(debt.DebtType.ToString());
        DebtPriceList.Add(debt.Amount);
    }

    foreach (var expense in Model.Wallet.ExpenseListe)
    {
        ExpenseLabelList.Add(expense.TypeOfExpense.ToString());
        ExpensePriceList.Add(expense.Amount);
    }
}


<script src="~/js/wallet.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<script>
    var ctx = document.getElementById('Total').getContext('2d');
    var myPieChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: ['Rest Income','Debt','Expenses','Saving'],
            datasets: [{
                label: 'Statistics',
                data: [@Convert.ToInt32(Model.NettIncomeAfter), @Convert.ToInt32(Model.TotalDebts), @Convert.ToInt32(Model.TotalExpense), @Convert.ToInt32(Model.Wallet.Saving.MonthlySavingAmount)],
                backgroundColor: [
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 77, 40, 0.2)'
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,

            plugins: {
                title: {
                    display: true,
                    text: 'distribution of the Income'
                }
            }
        }
    });

    var debtLabels = @Html.Raw(Json.Serialize(DebtLabelList));
    var debtPrices = @Html.Raw(Json.Serialize(DebtPriceList));

    var ctx2 = document.getElementById('Debt').getContext('2d');
    var myPieChart2 = new Chart(ctx2, {
        type: 'pie',
        data: {
            labels: debtLabels,
            datasets: [{
                label: 'Statistics',
                data: debtPrices,
                backgroundColor: [
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)'
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: true,
                    text: 'Debt sources'
                }
            }
        }
    });

    var expenseLabels = @Html.Raw(Json.Serialize(ExpenseLabelList));
    var expensePrices = @Html.Raw(Json.Serialize(ExpensePriceList));

    var ctx3 = document.getElementById('Expense').getContext('2d');
    var myPieChart3 = new Chart(ctx3, {
        type: 'pie',
        data: {
            labels: expenseLabels,
            datasets: [{
                label: 'Statistics',
                data: expensePrices,
                backgroundColor: [
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)'
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: true,
                    text: 'Expense sources'
                },
                datalabels: {
                    display: true,
                    color: 'black',
                    formatter: (value, context) => {
                        return context.chart.data.labels[context.dataIndex];
                    },
                    font: {
                        weight: 'bold'
                    }
                }
            }
        }
    });
</script>




